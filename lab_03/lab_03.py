'''
ЛБ3: Значения функций

Назначение:
Вычислить табличные значений функций f1 = x*sin(log(x)-pi/4)
f2 = x/2*sqrt(x*x+1)-log(x+sqrt(x*x+1)), используя символы псевдографики
x = 1(0,05)2

Переменные:
a - начальное значение x
b - конечное значение x
c - шаг цикла
x - текущее значение абсциссы
i - переменная цикла
f1 - ордината первой функции
f2 - ордината второй функции
maxf1 - максимальное значение первой функции
maxf2 - максимальное значение второй функции
sumMax - сумма максимальных значений функций
s - строка для формирования вывода значений
checkf1 - проверка наличия строк f1

Тестовый пример:
x = 1
f1 = -0.7071
f2 = -0.1743

x = 1.05
f1 = -0.7054
f2 = 0.1550
'''

from math import sin, log, pi, sqrt

print('f1 = x*sin(log(x)-pi/4)')
print('f2 = x/2*sqrt(x*x+1)-log(x+sqrt(x*x+1))')

a,b,c = map(float, input('\nВведете начальное значение x, конечное и шаг: ').\
split())

#Поиск ошибок в введенных значениях
while (c == 0 and a != b) or (a < b and c < 0) or (a > b and c > 0):
    if c == 0 and a != b:
        print('При неравных начальном и конечном значении шаг должен быть \
не равен нулю')
    if a < b and c < 0:
        print('Если начальное значение меньше конечного, шаг должен быть \
положительным')
    if a > b and c > 0:
        print('Если начальное значение больше конечного, шаг должен быть \
отрицательным')
    a,b,c = map(float, input('\nПопробуйте еще: ').split())

#Изменение нулевого значения шага при выводе одного значения x для
#корректной работы цикла
if a == b and c == 0:
    c = 1
    
x = 1
maxf2 = x/2*sqrt(x*x+1)-log(x+sqrt(x*x+1))
checkf1 = False

print('\n╔══════════════╦══════════════╦══════════════╗')
print('║       x      ║      f1      ║      f2      ║')
    
for i in range(int(a * 100), int(b*100+1*c/abs(c)), int(c * 100)):
    print('╠══════════════╬══════════════╬══════════════╣')
    x = i/100
    f2 = x/2*sqrt(x*x+1)-log(x+sqrt(x*x+1))
\
    if f2 > maxf2:
        maxf2 = f2

    #Формирование строки со значениями
    s = '║  ║  ║  ║'
    if abs(f2) > 999:
        s = s[:8] + '{:12.3e}' + s[8:]
    else:
        s = s[:8] + '{:12.4f}' + s[8:]

    if x > 0:
        f1 = x*sin(log(x)-pi/4)
        if abs(f1) > 999:
            s = s[:5] + '{:12.3e}' + s[5:]
        else:
            s = s[:5] + '{:12.4f}' + s[5:]
        if not checkf1 or f1 > maxf1:
            maxf1 = f1
            checkf1 = True
    else:
        s = s[:5] + '     {}     ' + s[5:]
        f1 = '--'
        
    if abs(x) > 99999:
        s =  s[:2] + '{:12.3e}' + s[2:]
    else:
        s = s[:2] + '{:12.2f}' + s[2:]
    
    print(s.format(x, f1, f2))
    

print('╚══════════════╩══════════════╩══════════════╝')

#Вычисление суммы максимальных значений
if checkf1:
    sumMax = maxf1+maxf2
    if len(str(abs(int(sumMax)))) > 3:
        print('\nСумма максимальных значений функций: {:.3e}'.format(sumMax))
    else:
        print('\nСумма максимальных значений функций: {:.4f}'.format(sumMax))
else:
    print('Сумма максимальных значений функций неопределена')
